name: Build Kivy APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Python (use stable version)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # Step 3: Install system dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git python3-pip python3-setuptools python3-dev \
            build-essential libssl-dev libffi-dev cython3 \
            openjdk-17-jdk unzip zlib1g-dev libncurses5-dev libsqlite3-dev \
            python3-venv
          git --version  # Verify Git installation

      # Step 4: Remove Any Existing Android SDK (Prevent Conflict)
      - name: Remove Existing Android SDK
        run: |
          rm -rf ~/.buildozer/android/platform/android-sdk
          rm -rf ~/.buildozer/android/platform/build-tools
          rm -rf ~/.buildozer/android/platform/platform-tools

      # Step 5: Set up Android SDK environment variables
      - name: Set up Environment Variables
        run: |
          echo 'ANDROID_HOME=$HOME/android-sdk' >> $GITHUB_ENV
          echo 'ANDROID_SDK_ROOT=$HOME/android-sdk' >> $GITHUB_ENV
          echo 'PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$HOME/android-sdk/platform-tools:$HOME/android-sdk/build-tools/34.0.0:$PATH' >> $GITHUB_ENV

      # Step 6: Install Android SDK Command-line Tools
      - name: Install Android SDK
        run: |
          export PATH="/usr/bin:/bin:$PATH"
          mkdir -p $HOME/android-sdk/cmdline-tools/latest
          cd $HOME/android-sdk/cmdline-tools/latest
          curl -o sdk-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -o sdk-tools.zip
          mv cmdline-tools/* . || true
          rmdir cmdline-tools || true
          chmod +x $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager

      # Step 7: Accept Android SDK Licenses (Fix License Issue)
      - name: Accept Android SDK Licenses
        run: |
          export PATH="/usr/bin:/bin:$PATH"
          mkdir -p $HOME/android-sdk/licenses
          echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > $HOME/android-sdk/licenses/android-sdk-license
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" > $HOME/android-sdk/licenses/android-sdk-preview-license
          yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses || true

      # Step 8: Install Android Build Tools & Platform Tools (Force Version 34.0.0)
      - name: Install Android Build Tools & Platform Tools
        run: |
          export PATH="/usr/bin:/bin:$PATH"
          mkdir -p $HOME/android-sdk
          $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --sdk_root=$HOME/android-sdk \
            "platform-tools" "platforms;android-34" "build-tools;34.0.0"

          echo "Verifying Installed Build Tools..."
          ls -l $HOME/android-sdk/build-tools/

      # Step 9: Verify Android SDK Installation
      - name: Verify Android SDK Installation
        run: |
          export PATH="/usr/bin:/bin:$PATH"
          echo "Checking Build Tools Directory..."

          if [ -d "$HOME/android-sdk/build-tools" ]; then
            ls -l "$HOME/android-sdk/build-tools/"
          else
            echo "⚠️ Warning: Build Tools directory not found!"
          fi

          if [ -d "$HOME/android-sdk/build-tools/34.0.0" ]; then
            ls -l "$HOME/android-sdk/build-tools/34.0.0/"
          else
            echo "⚠️ Warning: Build Tools 34.0.0 not found!"
          fi

          if [ -d "$HOME/android-sdk/platform-tools" ]; then
            ls -l "$HOME/android-sdk/platform-tools/"
          else
            echo "⚠️ Warning: Platform Tools directory not found!"
          fi

      # Step 10: Install Buildozer and Dependencies
      - name: Install Buildozer and Dependencies
        run: |
          pip install --upgrade pip
          pip install buildozer Cython virtualenv

      # Step 11: Verify AIDL Installation Before Building
      - name: Verify AIDL Installation
        run: |
          export PATH="/usr/bin:/bin:$PATH"
          if [ -f "$HOME/android-sdk/build-tools/34.0.0/aidl" ]; then
            echo "✅ AIDL is installed correctly!"
          else
            echo "❌ Error: AIDL is missing!"
            exit 1
          fi

      # Step 12: Build the APK using Buildozer
      - name: Build APK
        run: |
          export PATH="/usr/bin:/bin:$PATH"
          export ANDROID_HOME=$HOME/android-sdk
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          export ANDROID_NDK=$HOME/android-sdk/ndk/23b
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools:$ANDROID_HOME/build-tools/34.0.0:$PATH
      
          echo "Verifying AIDL Installation..."
          if [ -f "$ANDROID_HOME/build-tools/34.0.0/aidl" ]; then
            echo "✅ AIDL is installed correctly!"
          else
            echo "❌ Error: AIDL is missing!"
            exit 1
          fi
      
          buildozer -v android debug

      # Step 13: Upload the APK file as an artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: bin/*.apk
